$.fn.dataTable.ext.pager.numbers_length=7,$(document).ready(function(){function e(e){$("#table").DataTable().column(e).search($("#col"+e+"_filter").val()).draw()}editor=new $.fn.dataTable.Editor({table:"#table",fields:[{label:"First name:",name:"first_name"},{label:"Last name:",name:"last_name"},{label:"Position:",name:"position"},{label:"Office:",name:"office"},{label:"Extension:",name:"extn"},{label:"Start date:",name:"start_date",type:"datetime"},{label:"Salary:",name:"salary"}]}),$("a.editor_create").on("click",function(e){e.preventDefault(),editor.create({title:"Create new record",buttons:"Add"})}),$("#table").on("click","a.editor_edit",function(e){e.preventDefault(),editor.edit($(this).closest("tr"),{title:"Edit record",buttons:"Update"})}),$("#table").on("click","a.editor_remove",function(e){e.preventDefault(),editor.remove($(this).closest("tr"),{title:"Delete record",message:"Are you sure you wish to remove this record?",buttons:"Delete"})}),$("#table").DataTable({dom:'B<"table-header"f><"table-main"t><"table-footer"lp><"clear">',ajax:"data/info.txt",columns:[{data:null,render:function(e,t,a){return e.first_name+" "+e.last_name}},{data:"position"},{data:"office"},{data:"extn"},{data:"start_date"},{data:"salary",render:$.fn.dataTable.render.number(",",".",0,"$")}],select:!0,buttons:[{extend:"create",editor:editor}],rowCallback:function(e,t){$("input.editor-active",e).prop("checked",1==t.age)}}),$("input.column_filter").on("keyup click",function(){e($(this).parents("td").attr("data-column"))}),$("#filter_col4").on("change",function(){$("#table").DataTable().columns(3).search(this.value).draw()}),$("#filter_col5").on("change",function(){$("#table").DataTable().columns(4).search(this.value).draw()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImZuIiwiZGF0YVRhYmxlIiwiZXh0IiwicGFnZXIiLCJudW1iZXJzX2xlbmd0aCIsImRvY3VtZW50IiwicmVhZHkiLCJmaWx0ZXJDb2x1bW4iLCJpIiwiRGF0YVRhYmxlIiwiY29sdW1uIiwic2VhcmNoIiwidmFsIiwiZHJhdyIsImVkaXRvciIsIkVkaXRvciIsInRhYmxlIiwiZmllbGRzIiwibGFiZWwiLCJuYW1lIiwidHlwZSIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwiY3JlYXRlIiwidGl0bGUiLCJidXR0b25zIiwiZWRpdCIsInRoaXMiLCJjbG9zZXN0IiwicmVtb3ZlIiwibWVzc2FnZSIsImRvbSIsImFqYXgiLCJjb2x1bW5zIiwiZGF0YSIsInJlbmRlciIsInJvdyIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJudW1iZXIiLCJzZWxlY3QiLCJleHRlbmQiLCJyb3dDYWxsYmFjayIsInByb3AiLCJhZ2UiLCJwYXJlbnRzIiwiYXR0ciIsInZhbHVlIl0sIm1hcHBpbmdzIjoiQUFBQUEsRUFBQUMsR0FBQUMsVUFBQUMsSUFBQUMsTUFBQUMsZUFBQSxFQUNBTCxFQUFBTSxVQUFBQyxNQUFBLFdBbUdBLFFBQUFDLEdBQUFDLEdBQ0FULEVBQUEsVUFBQVUsWUFBQUMsT0FBQUYsR0FBQUcsT0FDQVosRUFBQSxPQUFBUyxFQUFBLFdBQUFJLE9BQ0FDLE9BcEdBQyxPQUFBLEdBQUFmLEdBQUFDLEdBQUFDLFVBQUFjLFFBQ0FDLE1BQUEsU0FDQUMsU0FDQUMsTUFBQSxjQUNBQyxLQUFBLGVBRUFELE1BQUEsYUFDQUMsS0FBQSxjQUVBRCxNQUFBLFlBQ0FDLEtBQUEsYUFFQUQsTUFBQSxVQUNBQyxLQUFBLFdBRUFELE1BQUEsYUFDQUMsS0FBQSxTQUVBRCxNQUFBLGNBQ0FDLEtBQUEsYUFDQUMsS0FBQSxhQUVBRixNQUFBLFVBQ0FDLEtBQUEsYUFTQXBCLEVBQUEsbUJBQUFzQixHQUFBLFFBQUEsU0FBQUMsR0FDQUEsRUFBQUMsaUJBRUFULE9BQUFVLFFBQ0FDLE1BQUEsb0JBQ0FDLFFBQUEsVUFLQTNCLEVBQUEsVUFBQXNCLEdBQUEsUUFBQSxnQkFBQSxTQUFBQyxHQUNBQSxFQUFBQyxpQkFFQVQsT0FBQWEsS0FBQTVCLEVBQUE2QixNQUFBQyxRQUFBLE9BQ0FKLE1BQUEsY0FDQUMsUUFBQSxhQUtBM0IsRUFBQSxVQUFBc0IsR0FBQSxRQUFBLGtCQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLGlCQUVBVCxPQUFBZ0IsT0FBQS9CLEVBQUE2QixNQUFBQyxRQUFBLE9BQ0FKLE1BQUEsZ0JBQ0FNLFFBQUEsK0NBQ0FMLFFBQUEsYUFLQTNCLEVBQUEsVUFBQVUsV0FDQXVCLElBQUEsK0RBQ0FDLEtBQUEsZ0JBQ0FDLFVBQ0FDLEtBQUEsS0FBQUMsT0FBQSxTQUFBRCxFQUFBZixFQUFBaUIsR0FFQSxNQUFBRixHQUFBRyxXQUFBLElBQUFILEVBQUFJLGFBRUFKLEtBQUEsYUFDQUEsS0FBQSxXQUNBQSxLQUFBLFNBQ0FBLEtBQUEsZUFDQUEsS0FBQSxTQUFBQyxPQUFBckMsRUFBQUMsR0FBQUMsVUFBQW1DLE9BQUFJLE9BQUEsSUFBQSxJQUFBLEVBQUEsT0FFQUMsUUFBQSxFQUNBZixVQUNBZ0IsT0FBQSxTQUFBNUIsT0FBQUEsU0FPQTZCLFlBQUEsU0FBQU4sRUFBQUYsR0FFQXBDLEVBQUEsc0JBQUFzQyxHQUFBTyxLQUFBLFVBQUEsR0FBQVQsRUFBQVUsUUFjQTlDLEVBQUEsdUJBQUFzQixHQUFBLGNBQUEsV0FDQWQsRUFBQVIsRUFBQTZCLE1BQUFrQixRQUFBLE1BQUFDLEtBQUEsa0JBSUFoRCxFQUFBLGdCQUFBc0IsR0FBQSxTQUFBLFdBQ0F0QixFQUFBLFVBQUFVLFlBQUF5QixRQUFBLEdBQUF2QixPQUFBaUIsS0FBQW9CLE9BQUFuQyxTQUVBZCxFQUFBLGdCQUFBc0IsR0FBQSxTQUFBLFdBQ0F0QixFQUFBLFVBQUFVLFlBQUF5QixRQUFBLEdBQUF2QixPQUFBaUIsS0FBQW9CLE9BQUFuQyIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQuZm4uZGF0YVRhYmxlLmV4dC5wYWdlci5udW1iZXJzX2xlbmd0aCA9IDc7XG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcblxuICAgIGVkaXRvciA9IG5ldyAkLmZuLmRhdGFUYWJsZS5FZGl0b3IoIHtcbiAgICAgICAgdGFibGU6IFwiI3RhYmxlXCIsXG4gICAgICAgIGZpZWxkczogWyB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiRmlyc3QgbmFtZTpcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcImZpcnN0X25hbWVcIlxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIkxhc3QgbmFtZTpcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcImxhc3RfbmFtZVwiXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiUG9zaXRpb246XCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJwb3NpdGlvblwiXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiT2ZmaWNlOlwiLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwib2ZmaWNlXCJcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJFeHRlbnNpb246XCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJleHRuXCJcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJTdGFydCBkYXRlOlwiLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwic3RhcnRfZGF0ZVwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiZGF0ZXRpbWVcIlxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlNhbGFyeTpcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInNhbGFyeVwiXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9ICk7XG5cblxuXG5cbiAgICAvLyBOZXcgcmVjb3JkXG4gICAgJCgnYS5lZGl0b3JfY3JlYXRlJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGVkaXRvci5jcmVhdGUoIHtcbiAgICAgICAgICAgIHRpdGxlOiAnQ3JlYXRlIG5ldyByZWNvcmQnLFxuICAgICAgICAgICAgYnV0dG9uczogJ0FkZCdcbiAgICAgICAgfSApO1xuICAgIH0gKTtcblxuICAgIC8vIEVkaXQgcmVjb3JkXG4gICAgJCgnI3RhYmxlJykub24oJ2NsaWNrJywgJ2EuZWRpdG9yX2VkaXQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgZWRpdG9yLmVkaXQoICQodGhpcykuY2xvc2VzdCgndHInKSwge1xuICAgICAgICAgICAgdGl0bGU6ICdFZGl0IHJlY29yZCcsXG4gICAgICAgICAgICBidXR0b25zOiAnVXBkYXRlJ1xuICAgICAgICB9ICk7XG4gICAgfSApO1xuXG4gICAgLy8gRGVsZXRlIGEgcmVjb3JkXG4gICAgJCgnI3RhYmxlJykub24oJ2NsaWNrJywgJ2EuZWRpdG9yX3JlbW92ZScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICBlZGl0b3IucmVtb3ZlKCAkKHRoaXMpLmNsb3Nlc3QoJ3RyJyksIHtcbiAgICAgICAgICAgIHRpdGxlOiAnRGVsZXRlIHJlY29yZCcsXG4gICAgICAgICAgICBtZXNzYWdlOiAnQXJlIHlvdSBzdXJlIHlvdSB3aXNoIHRvIHJlbW92ZSB0aGlzIHJlY29yZD8nLFxuICAgICAgICAgICAgYnV0dG9uczogJ0RlbGV0ZSdcbiAgICAgICAgfSApO1xuICAgIH0gKTtcblxuXG4gICAgJCgnI3RhYmxlJykuRGF0YVRhYmxlKCB7XG4gICAgICAgIFwiZG9tXCI6ICdCPFwidGFibGUtaGVhZGVyXCJmPjxcInRhYmxlLW1haW5cInQ+PFwidGFibGUtZm9vdGVyXCJscD48XCJjbGVhclwiPicsXG4gICAgICAgIFwiYWpheFwiOiBcImRhdGEvaW5mby50eHRcIixcbiAgICAgICAgICBjb2x1bW5zOiBbXG4gICAgICAgICAgICAgIHsgZGF0YTogbnVsbCwgcmVuZGVyOiBmdW5jdGlvbiAoIGRhdGEsIHR5cGUsIHJvdyApIHtcbiAgICAgICAgICAgICAgICAgIC8vIENvbWJpbmUgdGhlIGZpcnN0IGFuZCBsYXN0IG5hbWVzIGludG8gYSBzaW5nbGUgdGFibGUgZmllbGRcbiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmZpcnN0X25hbWUrJyAnK2RhdGEubGFzdF9uYW1lO1xuICAgICAgICAgICAgICB9IH0sXG4gICAgICAgICAgICAgIHsgZGF0YTogXCJwb3NpdGlvblwiIH0sXG4gICAgICAgICAgICAgIHsgZGF0YTogXCJvZmZpY2VcIiB9LFxuICAgICAgICAgICAgICB7IGRhdGE6IFwiZXh0blwiIH0sXG4gICAgICAgICAgICAgIHsgZGF0YTogXCJzdGFydF9kYXRlXCIgfSxcbiAgICAgICAgICAgICAgeyBkYXRhOiBcInNhbGFyeVwiLCByZW5kZXI6ICQuZm4uZGF0YVRhYmxlLnJlbmRlci5udW1iZXIoICcsJywgJy4nLCAwLCAnJCcgKSB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBzZWxlY3Q6IHRydWUsXG4gICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgICAgICB7IGV4dGVuZDogXCJjcmVhdGVcIiwgZWRpdG9yOiBlZGl0b3IgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgLy8gcm93Q2FsbGJhY2s6IGZ1bmN0aW9uICggcm93LCBkYXRhICkge1xuICAgICAgICAgIC8vICAgICAvLyBTZXQgdGhlIGNoZWNrZWQgc3RhdGUgb2YgdGhlIGNoZWNrYm94IGluIHRoZSB0YWJsZVxuICAgICAgICAgIC8vICAgICAvLyAkKCdzcGFuLmknLCByb3cpLmNzcygnYmFja2dyb3VuZCcsICdyZWQnLCBkYXRhLmFnZSA9PSAxICk7XG4gICAgICAgICAgLy8gICAgICQoJ3NwYW4uaScsIHJvdykuYWRkQ2xhc3MoICdpLW9rJywgZGF0YS5hZ2UgPT0gMSApO1xuICAgICAgICAgIC8vIH1cbiAgICAgICAgICByb3dDYWxsYmFjazogZnVuY3Rpb24gKCByb3csIGRhdGEgKSB7XG4gICAgICAgICAgICAgIC8vIFNldCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiB0aGUgY2hlY2tib3ggaW4gdGhlIHRhYmxlXG4gICAgICAgICAgICAgICQoJ2lucHV0LmVkaXRvci1hY3RpdmUnLCByb3cpLnByb3AoICdjaGVja2VkJywgZGF0YS5hZ2UgPT0gMSApO1xuICAgICAgICAgIH1cbiAgICB9ICk7XG5cblxuICAgICAgICAvLyAkKCcjdGFibGUnKS5EYXRhVGFibGUoKS5idXR0b25zKCkuY29udGFpbmVyKClcbiAgICAgICAgLy8gLmFwcGVuZFRvKCAkKCcuY29sLXNtLTY6ZXEoMCknLCAkKCcjdGFibGUnKS5EYXRhVGFibGUoKS50YWJsZSgpLmNvbnRhaW5lcigpICkgKTtcblxuICAgIC8vIENvbHVtbiBTZWFyY2hcbiAgICBmdW5jdGlvbiBmaWx0ZXJDb2x1bW4gKCBpICkge1xuICAgICAgICAkKCcjdGFibGUnKS5EYXRhVGFibGUoKS5jb2x1bW4oIGkgKS5zZWFyY2goXG4gICAgICAgICAgICAkKCcjY29sJytpKydfZmlsdGVyJykudmFsKClcbiAgICAgICAgKS5kcmF3KCk7XG4gICAgfVxuICAgICQoJ2lucHV0LmNvbHVtbl9maWx0ZXInKS5vbiggJ2tleXVwIGNsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBmaWx0ZXJDb2x1bW4oICQodGhpcykucGFyZW50cygndGQnKS5hdHRyKCdkYXRhLWNvbHVtbicpICk7XG4gICAgfSApO1xuXG5cbiAgICAgJCgnI2ZpbHRlcl9jb2w0Jykub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAkKCcjdGFibGUnKS5EYXRhVGFibGUoKS5jb2x1bW5zKDMpLnNlYXJjaCggdGhpcy52YWx1ZSApLmRyYXcoKTtcbiAgICAgIH0gKTtcbiAgICAgICQoJyNmaWx0ZXJfY29sNScpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgJCgnI3RhYmxlJykuRGF0YVRhYmxlKCkuY29sdW1ucyg0KS5zZWFyY2goIHRoaXMudmFsdWUgKS5kcmF3KCk7XG4gICAgICB9ICk7XG5cbn0gKTtcbiJdfQ==
